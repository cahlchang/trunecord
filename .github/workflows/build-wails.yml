name: Build Wails GUI Apps

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          # macOS builds
          - os: macos-latest
            platform: darwin
            arch: amd64
            name: trunecord-darwin-amd64
          - os: macos-latest
            platform: darwin
            arch: arm64
            name: trunecord-darwin-arm64
            
          # Windows builds  
          - os: windows-latest
            platform: windows
            arch: amd64
            name: trunecord-windows-amd64.exe
            
          # Linux builds
          - os: ubuntu-latest
            platform: linux
            arch: amd64
            name: trunecord-linux-amd64

    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install Wails
      run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

    # Platform-specific dependencies
    - name: Install Linux dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev
        sudo apt-get install -y libayatana-appindicator3-dev
        sudo apt-get install -y build-essential libopus-dev

    - name: Install macOS dependencies  
      if: runner.os == 'macOS'
      run: |
        brew install opus
        brew install create-dmg

    - name: Install Windows dependencies
      if: runner.os == 'Windows'
      run: |
        choco install mingw
        # WebView2 is included in Windows 10/11

    # Build the application
    - name: Build Wails App
      env:
        CGO_ENABLED: 1
        GOARCH: ${{ matrix.arch }}
      run: |
        cd go-client
        wails build -platform ${{ matrix.platform }}/${{ matrix.arch }} -o ${{ matrix.name }}

    # Package for macOS (create DMG)
    - name: Create macOS DMG
      if: runner.os == 'macOS'
      run: |
        cd go-client/build/bin
        create-dmg \
          --volname "trunecord" \
          --window-pos 200 120 \
          --window-size 600 400 \
          --icon-size 100 \
          --icon "trunecord.app" 175 120 \
          --hide-extension "trunecord.app" \
          --app-drop-link 425 120 \
          "trunecord-${{ matrix.arch }}.dmg" \
          "trunecord.app"

    # Package for Windows (create installer)
    - name: Create Windows Installer
      if: runner.os == 'Windows'
      run: |
        # Using NSIS or WiX to create installer
        # Example with Inno Setup:
        iscc go-client/scripts/windows-installer.iss

    # Upload artifacts
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.name }}
        path: |
          go-client/build/bin/${{ matrix.name }}
          go-client/build/bin/*.dmg
          go-client/build/bin/*.exe
          go-client/build/bin/*.msi

  # Create Release
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          trunecord-*/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}